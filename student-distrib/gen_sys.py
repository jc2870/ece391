#!/bin/python3

# syscalls = ["exit", "fork", "read", "write", "open", "close", "waitpid", "creat",
#             "link", "unlink", "execve", "chdir", "time", "mknod", "chmod", "lchown"]
syscalls = ["setup","exit", "fork", "read", "write", "open", "close"]



with open("syscall.h", "w+") as sys_f:
    sys_f.write("#ifndef _SYSCALL_H_\n")
    sys_f.write("#define _SYSCALL_H_\n")
    sys_f.write("/* DO NOT modify this file directly, This file was generated by gen_sys.py.*/\n")
    sys_f.write("\n")
    sys_f.write("typedef int (*syscall_fn_ptr)();\n")
    for idx, syscall in enumerate(syscalls):
        sys_f.write("\t#define SYS_{}\t\t{}\n".format(syscall, idx))

    sys_f.write("\n")
    for syscall in syscalls:
        sys_f.write("\textern int sys_{}();\n".format(syscall))

    sys_f.write("\n")
    sys_f.write("\tsyscall_fn_ptr syscall_table[] = {")
    for syscall in syscalls:
        sys_f.write("sys_{},".format(syscall))
    sys_f.write("};\n")

    sys_f.write("\tint nr_syscalls = sizeof(syscall_table)/sizeof(syscall_table[0]);")

    sys_f.write("\n")
    sys_f.write("#endif")

